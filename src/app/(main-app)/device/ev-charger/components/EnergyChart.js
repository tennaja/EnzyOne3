import React from 'react';
import {
  ResponsiveContainer,
  ComposedChart,
  XAxis,
  YAxis,
  Tooltip,
  Legend,
  Bar,
  Line,
  ReferenceLine,
  Brush,
} from 'recharts';

const rawData = [];

for (let day = 1; day <= 3; day++) {
  for (let hour = 0; hour < 24; hour++) {
    const hourStr = hour.toString().padStart(2, '0');
    const time = `${day.toString().padStart(2, '0')} ${hourStr}:00`;

    // Consumption สูงสุดกลางวัน / เย็น
    const consumed = hour >= 6 && hour <= 20
      ? 80 + Math.floor(Math.random() * 50)
      : 60 + Math.floor(Math.random() * 20);

    // Generation เฉพาะกลางวัน
    const generated = hour >= 7 && hour <= 17
      ? 40 + Math.floor(Math.random() * 50)
      : 10 + Math.floor(Math.random() * 10);

    const purchased = Math.max(consumed - generated, 0);

    // Energy base line สลับขึ้นลง (±5–15 จากค่ากลาง 90)
    const baseLineValue = 85 + Math.floor(Math.sin((day * 24 + hour) / 5) * 10) + Math.floor(Math.random() * 5);

    rawData.push({
      day: time,
      consumed,
      generated,
      purchased,
      energy_base_line: baseLineValue,
    });
  }
}



const data = rawData.map(item => ({
  day: item.day,
  consumed: -item.consumed,
  generated_mirror: item.generated,
  purchased_mirror: item.purchased,
  energy_base_line: - item.energy_base_line, // เพิ่ม field นี้
}));

const maxY = Math.max(
  ...rawData.map(item => item.consumed),
  ...rawData.map(item => item.generated + item.purchased),
  ...rawData.map(item => item.energy_base_line)
);

export default function EnergyTrendChart() {
  return (
    <ResponsiveContainer width="100%" height={500}>
      <ComposedChart data={data} stackOffset="sign" barCategoryGap={10}>
        <XAxis dataKey="day" />
        <YAxis domain={[-maxY, maxY]} tickFormatter={(v) => Math.abs(v)} />
        <Tooltip formatter={(value) => Math.abs(value)} />
        <Legend />
        <ReferenceLine y={0} stroke="gray" strokeDasharray="3 3" />

        {/* Bar Chart */}
        <Bar dataKey="consumed" stackId="energy" name="Consumed by appliances" fill="#FFB74D" />
        <Bar dataKey="generated_mirror" stackId="energy" name="Generated by PV" fill="#81C784" />
        <Bar dataKey="purchased_mirror" stackId="energy" name="Purchased from grid" fill="#4FC3F7" />

        {/* Line Chart: Energy Base Line */}
        <Line
          type="monotone"
          dataKey="energy_base_line"
          stroke="#E53935"
          strokeWidth={2}
          dot={true}
          name="Energy Base Line"
        />

        <Brush dataKey="day" height={30} stroke="#8884d8" />
      </ComposedChart>
    </ResponsiveContainer>
  );
}
